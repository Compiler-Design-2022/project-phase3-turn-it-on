
        	 addi $t0, $sp, 0
        	 addi $sp, $sp, -4
        	 sw $t0, 0($sp)
        	 addi $sp, $sp, -4
        jal main
        j ENDPROGRAM
        
                    main:
                    sw $ra 8($sp)
                    
                    	LABL7_start:
                
                            sub $t1, $t1, $t1
                            sw $t1, 0($sp)
                            addi $sp, $sp, -4
                        
                            sub $t1, $t1, $t1
                            sw $t1, 0($sp)
                            addi $sp, $sp, -4
                         
                            .data
                            __IGNORELABL8: .float 0.0
                            .text
                            	 la $t0, __IGNORELABL8
                            	 sw $t0, 0($sp)
                            	 addi $sp, $sp, -4
                        
                    	LABL9_start:
                
                        	 addi $t0, $sp, 12
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                     #new_array_expr cal size
         
                        	 li $t0, 1
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
            #new_arra expr cal size END
            #new array expr get memory
                    	 lw $t0, 4($sp)
                    	 move $t8, $t0
                    	 sub $t1, $t1, $t1 
                    	 addi $t1, $t1, 4
                    	 mul $t0, $t0, $t1
                    	 addi $t0, $t0, 4
                    	 move $t4, $t0
                    	 move $a0, $t0
                    	 li $v0, 9 
                    	 syscall
                    	 move $t6, $v0
                    	 lw $t0, 4($sp)
                    	 sw $t0 ,0($v0)
                    	 sw $v0, 4($sp)
            #new array expr get memory END
                
                        	 move $a0, $t4
                        	 li $v0, 9 
                        	 syscall
                        	 li $t1, 4
                        	 move $t5, $v0
                        	 __IGNORELABL10:
                        	 addi $t5, $t5, 4
                        	 addi $t6, $t6, 4
                        	 beq $t1, $t4, __IGNORELABL11
                        	 sw $t5, 0($t6)
                        	 addi $t1, $t1, 4
                        	 j __IGNORELABL10
                        	 __IGNORELABL11:
                    
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 sw $t0, 0($t1)
                    	 addi $sp, $sp, 8
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                
                    	 addi $sp, $sp, 4
                    	 LABL9_end:
                
                    	LABL12_start:
                
                        	 addi $t0, $sp, 8
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                     #new_array_expr cal size
         
                        	 li $t0, 1
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
            #new_arra expr cal size END
            #new array expr get memory
                    	 lw $t0, 4($sp)
                    	 move $t8, $t0
                    	 sub $t1, $t1, $t1 
                    	 addi $t1, $t1, 4
                    	 mul $t0, $t0, $t1
                    	 addi $t0, $t0, 4
                    	 move $t4, $t0
                    	 move $a0, $t0
                    	 li $v0, 9 
                    	 syscall
                    	 move $t6, $v0
                    	 lw $t0, 4($sp)
                    	 sw $t0 ,0($v0)
                    	 sw $v0, 4($sp)
            #new array expr get memory END
                
                        	 move $a0, $t4
                        	 li $v0, 9 
                        	 syscall
                        	 li $t1, 4
                        	 move $t5, $v0
                        	 __IGNORELABL13:
                        	 addi $t5, $t5, 4
                        	 addi $t6, $t6, 4
                        	 beq $t1, $t4, __IGNORELABL14
                        	 sw $t5, 0($t6)
                        	 addi $t1, $t1, 4
                        	 j __IGNORELABL13
                        	 __IGNORELABL14:
                    
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 sw $t0, 0($t1)
                    	 addi $sp, $sp, 8
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                
                    	 addi $sp, $sp, 4
                    	 LABL12_end:
                
                    	LABL15_start:
                #array val load array
                    
                        	 addi $t0, $sp, 12
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                 
                    #array val load array END
                    #array val index load 
                     
                        	 li $t0, 0
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    #array val index load END
                    #array val start
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 li $t2, 4 # it is 4 
                    	 mul $t0, $t0, $t2
                    	 add $t0, $t0, $t1
                    	 addi $sp, $sp, 8
                    	 addi $t0, $t0, 4
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                    #array val end
                  
                        .data
                        __IGNORELABL16: .float 4.2
                        .text
                        	 la $t0, __IGNORELABL16
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                        	 lw $t0, 4($sp)
                        	 lw $t1, 8($sp) # t1 is address now 
                        	 lwc1 $f0, 0($t0) # value
                        	 lw $t2, 0($t1)
                        	 swc1 $f0, 0($t2)
                        	 addi $sp, $sp, 8
                        	 sw $t2, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	 addi $sp, $sp, 4
                    	 LABL15_end:
                
                    	LABL17_start:
                #array val load array
                    
                        	 addi $t0, $sp, 8
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                 
                    #array val load array END
                    #array val index load 
                     
                        	 li $t0, 0
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    #array val index load END
                    #array val start
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 li $t2, 4 # it is 4 
                    	 mul $t0, $t0, $t2
                    	 add $t0, $t0, $t1
                    	 addi $sp, $sp, 8
                    	 addi $t0, $t0, 4
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                    #array val end
                  
                        .data
                        __IGNORELABL18: .float 5.9
                        .text
                        	 la $t0, __IGNORELABL18
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                        	 lw $t0, 4($sp)
                        	 lw $t1, 8($sp) # t1 is address now 
                        	 lwc1 $f0, 0($t0) # value
                        	 lw $t2, 0($t1)
                        	 swc1 $f0, 0($t2)
                        	 addi $sp, $sp, 8
                        	 sw $t2, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	 addi $sp, $sp, 4
                    	 LABL17_end:
                
                    	LABL19_start:
                
                        	 addi $t0, $sp, 4
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                     #array val load array
                    
                        	 addi $t0, $sp, 16
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                 
                    #array val load array END
                    #array val index load 
                     
                        	 li $t0, 0
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    #array val index load END
                    #array val start
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 li $t2, 4 # it is 4 
                    	 mul $t0, $t0, $t2
                    	 add $t0, $t0, $t1
                    	 addi $sp, $sp, 8
                    	 addi $t0, $t0, 4
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                    #array val end
                
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                 #array val load array
                    
                        	 addi $t0, $sp, 16
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                 
                    #array val load array END
                    #array val index load 
                     
                        	 li $t0, 0
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    #array val index load END
                    #array val start
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                    	 li $t2, 4 # it is 4 
                    	 mul $t0, $t0, $t2
                    	 add $t0, $t0, $t1
                    	 addi $sp, $sp, 8
                    	 addi $t0, $t0, 4
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                    #array val end
                
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                
                    	 lw $t0, 4($sp)
                    	 lw $t1, 8($sp)
                
                    	 lwc1 $f0, 0($t0)
                
                    	 lwc1 $f2, 0($t1)
                
                    	 add.s $f0, $f2, $f0
                    	 addi $sp, $sp, 8
                    .data
                    __IGNORELABL20: .float 0.0
                    .text
                    	 la $t0, __IGNORELABL20
                    	 swc1 $f0, 0($t0)
                    	 sw $t0, 0($sp)
                    	 addi $sp, $sp, -4
                
                        	 lw $t0, 4($sp)
                        	 lw $t1, 8($sp) # t1 is address now 
                        	 lwc1 $f0, 0($t0) # value
                        	 lw $t2, 0($t1)
                        	 swc1 $f0, 0($t2)
                        	 addi $sp, $sp, 8
                        	 sw $t2, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	 addi $sp, $sp, 4
                    	 LABL19_end:
                
                    	LABL21_start:
                
                        	 addi $t0, $sp, 4
                        	 sw $t0, 0($sp)
                        	 addi $sp, $sp, -4
                    
                    	lw $t0, 4($sp)
                    	lw $t1, 0($t0)
                    	sw $t1, 4($sp)
                
                            	 lw $t0, 4($sp)
                            	 lwc1 $f0, 0($t0)
                            	 li $v0, 2
                            	 sub.s $f2, $f2, $f2
                            	 add.s $f12, $f0, $f2
                            	 syscall
                        
                    #print endl
                    	addi $sp, $sp, 4
                    	li $a0, 10
                    	li $v0, 11  
                    	syscall
                    #print endl END
                
                    	 addi $sp, $sp, 0
                    	 LABL21_end:
                
                    	 addi $sp, $sp, 12
                    	 LABL7_end:
                
                
                    	 lw $t1, 8($sp)
                
                    	 addi $sp, $sp, 0
                    	 jr $t1
                
        ENDPROGRAM:
        